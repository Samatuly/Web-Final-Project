{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AuthInterceptor {\n  constructor() {}\n  intercept(req, next) {\n    const token = localStorage.getItem('token');\n    if (token) {\n      const newReq = req.clone({\n        headers: req.headers.set('Authorization', `JWT ${token}`)\n      });\n      return next.handle(newReq);\n    }\n    return next.handle(req);\n  }\n}\nAuthInterceptor.ɵfac = function AuthInterceptor_Factory(t) {\n  return new (t || AuthInterceptor)();\n};\nAuthInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthInterceptor,\n  factory: AuthInterceptor.ɵfac\n});","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,eAAe;EACxBC,eAAe;EAEfC,SAAS,CAACC,GAAqB,EAAEC,IAAiB;IAC9C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAC;MACN,MAAMG,MAAM,GAAGL,GAAG,CAACM,KAAK,CAAC;QACrBC,OAAO,EAAEP,GAAG,CAACO,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,OAAON,KAAK,EAAE;OAC3D,CAAC;MACF,OAAOD,IAAI,CAACQ,MAAM,CAACJ,MAAM,CAAC;;IAG9B,OAAOJ,IAAI,CAACQ,MAAM,CAACT,GAAG,CAAC;EAC3B;;AAbSH,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAa,SAAfb,eAAe;AAAA","names":["AuthInterceptor","constructor","intercept","req","next","token","localStorage","getItem","newReq","clone","headers","set","handle","factory"],"sourceRoot":"","sources":["C:\\Users\\Serikbolsyn\\Desktop\\Serikbolsyn\\Web\\Project\\job-finding-website\\src\\app\\AuthInterceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n    constructor() {}\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        const token = localStorage.getItem('token');\r\n        if (token){\r\n            const newReq = req.clone({\r\n                headers: req.headers.set('Authorization', `JWT ${token}`),\r\n            })\r\n            return next.handle(newReq);\r\n        }\r\n\r\n        return next.handle(req);\r\n    }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}