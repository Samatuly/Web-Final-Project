{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../vacancies.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../top-bar/top-bar.component\";\nfunction SearchPageComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"div\", 5)(2, \"h2\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"h2\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Vacancy name: \", item_r1.name, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Salary: \", item_r1.salary, \" tenge \");\n  }\n}\nexport class SearchPageComponent {\n  constructor(route, service) {\n    this.route = route;\n    this.service = service;\n    this.vacancies = [];\n    this.company_id = 0;\n    searchQuery = '';\n  }\n  ngOnInit() {\n    this.company_id = Number(this.route.snapshot.paramMap.get('id'));\n    this.getVacancies(this.company_id);\n  }\n  getVacancies(id) {\n    this.service.getCompanyVacancies(id).subscribe(data => {\n      this.vacancies = data;\n      console.log(this.vacancies.length);\n    });\n  }\n}\nSearchPageComponent.ɵfac = function SearchPageComponent_Factory(t) {\n  return new (t || SearchPageComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.VacanciesService));\n};\nSearchPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SearchPageComponent,\n  selectors: [[\"app-search-page\"]],\n  decls: 7,\n  vars: 2,\n  consts: [[1, \"container\"], [\"id\", \"main\"], [\"id\", \"vacancies\"], [\"class\", \"items\", 4, \"ngFor\", \"ngForOf\"], [1, \"items\"], [1, \"item-details\"]],\n  template: function SearchPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-top-bar\");\n      i0.ɵɵelementStart(1, \"div\", 0)(2, \"h1\");\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 1)(5, \"div\", 2);\n      i0.ɵɵtemplate(6, SearchPageComponent_div_6_Template, 6, 2, \"div\", 3);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\"My Vacancies: \", ctx.vacancies.length, \"\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.vacancies);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.TopBarComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAMYA,8BAAsD;IAE1CA,YAA4B;IAAAA,iBAAK;IACrCA,0BAAI;IAAAA,YAA8B;IAAAA,iBAAK;;;;IADnCA,eAA4B;IAA5BA,0DAA4B;IAC5BA,eAA8B;IAA9BA,4DAA8B;;;ACCtD,OAAM,MAAOC,mBAAmB;EAI9BC,YACYC,KAAqB,EACrBC,OAAyB;IADzB,UAAK,GAALD,KAAK;IACL,YAAO,GAAPC,OAAO;IAEjB,IAAI,CAACC,SAAS,GAAG,EAAE;IACnB,IAAI,CAACC,UAAU,GAAG,CAAC;IACnBC,WAAW,GAAG,EAAE;EAClB;EAEAC,QAAQ;IACN,IAAI,CAACF,UAAU,GAAGG,MAAM,CAAC,IAAI,CAACN,KAAK,CAACO,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IAChE,IAAI,CAACC,YAAY,CAAC,IAAI,CAACP,UAAU,CAAC;EACpC;EAEAO,YAAY,CAACC,EAAU;IACrB,IAAI,CAACV,OAAO,CAACW,mBAAmB,CAACD,EAAE,CAAC,CAACE,SAAS,CAAEC,IAAI,IAAI;MACtD,IAAI,CAACZ,SAAS,GAAGY,IAAI;MACrBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACd,SAAS,CAACe,MAAM,CAAC;IACpC,CAAC,CAAC;EACJ;;AAvBWnB,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDVhCzB,8BAA2B;MAE3BA,8BAAuB;MACfA,YAAkC;MAAAA,iBAAK;MAC3CA,8BAAiB;MAETA,oEAKM;MACVA,iBAAM;;;MATNA,eAAkC;MAAlCA,iEAAkC;MAGUA,eAAY;MAAZA,uCAAY","names":["i0","SearchPageComponent","constructor","route","service","vacancies","company_id","searchQuery","ngOnInit","Number","snapshot","paramMap","get","getVacancies","id","getCompanyVacancies","subscribe","data","console","log","length","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Serikbolsyn\\Desktop\\Serikbolsyn\\Web\\Project\\job-finding-website\\src\\app\\search-page\\search-page.component.html","C:\\Users\\Serikbolsyn\\Desktop\\Serikbolsyn\\Web\\Project\\job-finding-website\\src\\app\\search-page\\search-page.component.ts"],"sourcesContent":["<app-top-bar></app-top-bar>\n\n<div class=\"container\">\n    <h1>My Vacancies: {{vacancies.length}}</h1>\n    <div id = \"main\">\n        <div id = \"vacancies\">\n            <div class = \"items\" *ngFor = \"let item of vacancies\">\n                <div class = \"item-details\" >\n                    <h2>Vacancy name: {{item.name}} </h2>\n                    <h2>Salary: {{item.salary}} tenge </h2>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {Vacancy} from \"../models\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {VacanciesService} from \"../vacancies.service\";\n\n@Component({\n  selector: 'app-search-page',\n  templateUrl: './search-page.component.html',\n  styleUrls: ['./search-page.component.css']\n})\nexport class SearchPageComponent implements OnInit{\n  vacancies: Vacancy[];\n  company_id: number;\n\n  constructor(\n      private route: ActivatedRoute,\n      private service: VacanciesService\n  ) {\n    this.vacancies = [];\n    this.company_id = 0;\n    searchQuery = '';\n  }\n\n  ngOnInit() {\n    this.company_id = Number(this.route.snapshot.paramMap.get('id'));\n    this.getVacancies(this.company_id)\n  }\n\n  getVacancies(id: number) {\n    this.service.getCompanyVacancies(id).subscribe((data) => {\n      this.vacancies = data\n      console.log(this.vacancies.length)\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}