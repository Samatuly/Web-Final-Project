import { NgModule } from '@angular/core';
import { NgArrayPipesModule } from './pipes/array/index';
import { NgObjectPipesModule } from './pipes/object/index';
import { NgStringPipesModule } from './pipes/string/index';
import { NgMathPipesModule } from './pipes/math/index';
import { NgBooleanPipesModule } from './pipes/boolean/index';
import { NgDatePipesModule } from './pipes/date/index';
import * as i0 from "@angular/core";
export class NgPipesModule {
}
NgPipesModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: NgPipesModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgPipesModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.2.12", ngImport: i0, type: NgPipesModule, exports: [NgArrayPipesModule,
        NgStringPipesModule,
        NgMathPipesModule,
        NgBooleanPipesModule,
        NgObjectPipesModule,
        NgDatePipesModule] });
NgPipesModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: NgPipesModule, imports: [NgArrayPipesModule,
        NgStringPipesModule,
        NgMathPipesModule,
        NgBooleanPipesModule,
        NgObjectPipesModule,
        NgDatePipesModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: NgPipesModule, decorators: [{
            type: NgModule,
            args: [{
                    exports: [
                        NgArrayPipesModule,
                        NgStringPipesModule,
                        NgMathPipesModule,
                        NgBooleanPipesModule,
                        NgObjectPipesModule,
                        NgDatePipesModule,
                    ],
                }]
        }] });
export * from './pipes/array/index';
export * from './pipes/object/index';
export * from './pipes/string/index';
export * from './pipes/math/index';
export * from './pipes/boolean/index';
export * from './pipes/date/index';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctcGlwZXMubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL25nLXBpcGVzL25nLXBpcGVzLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3pELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQzNELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQzNELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzdELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLG9CQUFvQixDQUFDOztBQVl2RCxNQUFNLE9BQU8sYUFBYTs7MkdBQWIsYUFBYTs0R0FBYixhQUFhLFlBUnRCLGtCQUFrQjtRQUNsQixtQkFBbUI7UUFDbkIsaUJBQWlCO1FBQ2pCLG9CQUFvQjtRQUNwQixtQkFBbUI7UUFDbkIsaUJBQWlCOzRHQUdSLGFBQWEsWUFSdEIsa0JBQWtCO1FBQ2xCLG1CQUFtQjtRQUNuQixpQkFBaUI7UUFDakIsb0JBQW9CO1FBQ3BCLG1CQUFtQjtRQUNuQixpQkFBaUI7NEZBR1IsYUFBYTtrQkFWekIsUUFBUTttQkFBQztvQkFDUixPQUFPLEVBQUU7d0JBQ1Asa0JBQWtCO3dCQUNsQixtQkFBbUI7d0JBQ25CLGlCQUFpQjt3QkFDakIsb0JBQW9CO3dCQUNwQixtQkFBbUI7d0JBQ25CLGlCQUFpQjtxQkFDbEI7aUJBQ0Y7O0FBR0QsY0FBYyxxQkFBcUIsQ0FBQztBQUNwQyxjQUFjLHNCQUFzQixDQUFDO0FBQ3JDLGNBQWMsc0JBQXNCLENBQUM7QUFDckMsY0FBYyxvQkFBb0IsQ0FBQztBQUNuQyxjQUFjLHVCQUF1QixDQUFDO0FBQ3RDLGNBQWMsb0JBQW9CLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmdBcnJheVBpcGVzTW9kdWxlIH0gZnJvbSAnLi9waXBlcy9hcnJheS9pbmRleCc7XG5pbXBvcnQgeyBOZ09iamVjdFBpcGVzTW9kdWxlIH0gZnJvbSAnLi9waXBlcy9vYmplY3QvaW5kZXgnO1xuaW1wb3J0IHsgTmdTdHJpbmdQaXBlc01vZHVsZSB9IGZyb20gJy4vcGlwZXMvc3RyaW5nL2luZGV4JztcbmltcG9ydCB7IE5nTWF0aFBpcGVzTW9kdWxlIH0gZnJvbSAnLi9waXBlcy9tYXRoL2luZGV4JztcbmltcG9ydCB7IE5nQm9vbGVhblBpcGVzTW9kdWxlIH0gZnJvbSAnLi9waXBlcy9ib29sZWFuL2luZGV4JztcbmltcG9ydCB7IE5nRGF0ZVBpcGVzTW9kdWxlIH0gZnJvbSAnLi9waXBlcy9kYXRlL2luZGV4JztcblxuQE5nTW9kdWxlKHtcbiAgZXhwb3J0czogW1xuICAgIE5nQXJyYXlQaXBlc01vZHVsZSxcbiAgICBOZ1N0cmluZ1BpcGVzTW9kdWxlLFxuICAgIE5nTWF0aFBpcGVzTW9kdWxlLFxuICAgIE5nQm9vbGVhblBpcGVzTW9kdWxlLFxuICAgIE5nT2JqZWN0UGlwZXNNb2R1bGUsXG4gICAgTmdEYXRlUGlwZXNNb2R1bGUsXG4gIF0sXG59KVxuZXhwb3J0IGNsYXNzIE5nUGlwZXNNb2R1bGUge31cblxuZXhwb3J0ICogZnJvbSAnLi9waXBlcy9hcnJheS9pbmRleCc7XG5leHBvcnQgKiBmcm9tICcuL3BpcGVzL29iamVjdC9pbmRleCc7XG5leHBvcnQgKiBmcm9tICcuL3BpcGVzL3N0cmluZy9pbmRleCc7XG5leHBvcnQgKiBmcm9tICcuL3BpcGVzL21hdGgvaW5kZXgnO1xuZXhwb3J0ICogZnJvbSAnLi9waXBlcy9ib29sZWFuL2luZGV4JztcbmV4cG9ydCAqIGZyb20gJy4vcGlwZXMvZGF0ZS9pbmRleCc7XG4iXX0=