import { Pipe } from '@angular/core';
import * as i0 from "@angular/core";
export class UnionPipe {
    transform(input, args = []) {
        if (!Array.isArray(input) || !Array.isArray(args)) {
            return input;
        }
        return args.reduce((newArr, currArr) => {
            return newArr.concat(currArr.reduce((noDupArr, curr) => {
                // tslint:disable-next-line:no-bitwise
                return !~noDupArr.indexOf(curr) && !~newArr.indexOf(curr) ? noDupArr.concat([curr]) : noDupArr;
            }, []));
        }, input);
    }
}
UnionPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: UnionPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
UnionPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "14.0.0", version: "14.2.12", ngImport: i0, type: UnionPipe, name: "union" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: UnionPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'union' }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidW5pb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvbmctcGlwZXMvcGlwZXMvYXJyYXkvdW5pb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUM7O0FBR3BELE1BQU0sT0FBTyxTQUFTO0lBSXBCLFNBQVMsQ0FBQyxLQUFVLEVBQUUsT0FBYyxFQUFFO1FBQ3BDLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUNqRCxPQUFPLEtBQUssQ0FBQztTQUNkO1FBRUQsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsTUFBTSxFQUFFLE9BQU8sRUFBRSxFQUFFO1lBQ3JDLE9BQU8sTUFBTSxDQUFDLE1BQU0sQ0FDbEIsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLFFBQWUsRUFBRSxJQUFTLEVBQUUsRUFBRTtnQkFDNUMsc0NBQXNDO2dCQUN0QyxPQUFPLENBQUMsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDO1lBQ2pHLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FDUCxDQUFDO1FBQ0osQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ1osQ0FBQzs7dUdBakJVLFNBQVM7cUdBQVQsU0FBUzs0RkFBVCxTQUFTO2tCQURyQixJQUFJO21CQUFDLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQFBpcGUoeyBuYW1lOiAndW5pb24nIH0pXG5leHBvcnQgY2xhc3MgVW5pb25QaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XG4gIHRyYW5zZm9ybTxUPihpbnB1dDogVCwgYXJncz86IGFueVtdKTogVDtcbiAgdHJhbnNmb3JtKGlucHV0OiBhbnlbXSwgYXJncz86IGFueVtdKTogYW55W107XG5cbiAgdHJhbnNmb3JtKGlucHV0OiBhbnksIGFyZ3M6IGFueVtdID0gW10pOiBhbnkge1xuICAgIGlmICghQXJyYXkuaXNBcnJheShpbnB1dCkgfHwgIUFycmF5LmlzQXJyYXkoYXJncykpIHtcbiAgICAgIHJldHVybiBpbnB1dDtcbiAgICB9XG5cbiAgICByZXR1cm4gYXJncy5yZWR1Y2UoKG5ld0FyciwgY3VyckFycikgPT4ge1xuICAgICAgcmV0dXJuIG5ld0Fyci5jb25jYXQoXG4gICAgICAgIGN1cnJBcnIucmVkdWNlKChub0R1cEFycjogYW55W10sIGN1cnI6IGFueSkgPT4ge1xuICAgICAgICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpuby1iaXR3aXNlXG4gICAgICAgICAgcmV0dXJuICF+bm9EdXBBcnIuaW5kZXhPZihjdXJyKSAmJiAhfm5ld0Fyci5pbmRleE9mKGN1cnIpID8gbm9EdXBBcnIuY29uY2F0KFtjdXJyXSkgOiBub0R1cEFycjtcbiAgICAgICAgfSwgW10pXG4gICAgICApO1xuICAgIH0sIGlucHV0KTtcbiAgfVxufVxuIl19