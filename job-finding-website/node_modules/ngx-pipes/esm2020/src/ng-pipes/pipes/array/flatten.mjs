import { Pipe } from '@angular/core';
import * as i0 from "@angular/core";
export class FlattenPipe {
    transform(input, shallow = false) {
        if (!Array.isArray(input)) {
            return input;
        }
        return shallow ? [].concat.apply([], input) : this.flatten(input);
    }
    flatten(array) {
        return array.reduce((arr, elm) => {
            if (Array.isArray(elm)) {
                return arr.concat(this.flatten(elm));
            }
            return arr.concat(elm);
        }, []);
    }
}
FlattenPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: FlattenPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
FlattenPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "14.0.0", version: "14.2.12", ngImport: i0, type: FlattenPipe, name: "flatten" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: FlattenPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'flatten' }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmxhdHRlbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9uZy1waXBlcy9waXBlcy9hcnJheS9mbGF0dGVuLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQWlCLE1BQU0sZUFBZSxDQUFDOztBQUdwRCxNQUFNLE9BQU8sV0FBVztJQUl0QixTQUFTLENBQUMsS0FBVSxFQUFFLFVBQW1CLEtBQUs7UUFDNUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEVBQUU7WUFDekIsT0FBTyxLQUFLLENBQUM7U0FDZDtRQUVELE9BQU8sT0FBTyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxFQUFFLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDcEUsQ0FBQztJQUVPLE9BQU8sQ0FBQyxLQUFZO1FBQzFCLE9BQU8sS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEdBQVUsRUFBRSxHQUFRLEVBQUUsRUFBRTtZQUMzQyxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLEVBQUU7Z0JBQ3RCLE9BQU8sR0FBRyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7YUFDdEM7WUFFRCxPQUFPLEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDekIsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ1QsQ0FBQzs7eUdBcEJVLFdBQVc7dUdBQVgsV0FBVzs0RkFBWCxXQUFXO2tCQUR2QixJQUFJO21CQUFDLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQFBpcGUoeyBuYW1lOiAnZmxhdHRlbicgfSlcbmV4cG9ydCBjbGFzcyBGbGF0dGVuUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xuICB0cmFuc2Zvcm08VD4oaW5wdXQ6IFQsIHNoYWxsb3c/OiBib29sZWFuKTogVDtcbiAgdHJhbnNmb3JtKGlucHV0OiBhbnlbXSwgc2hhbGxvdz86IGJvb2xlYW4pOiBhbnlbXTtcblxuICB0cmFuc2Zvcm0oaW5wdXQ6IGFueSwgc2hhbGxvdzogYm9vbGVhbiA9IGZhbHNlKTogYW55IHtcbiAgICBpZiAoIUFycmF5LmlzQXJyYXkoaW5wdXQpKSB7XG4gICAgICByZXR1cm4gaW5wdXQ7XG4gICAgfVxuXG4gICAgcmV0dXJuIHNoYWxsb3cgPyBbXS5jb25jYXQuYXBwbHkoW10sIGlucHV0KSA6IHRoaXMuZmxhdHRlbihpbnB1dCk7XG4gIH1cblxuICBwcml2YXRlIGZsYXR0ZW4oYXJyYXk6IGFueVtdKTogYW55W10ge1xuICAgIHJldHVybiBhcnJheS5yZWR1Y2UoKGFycjogYW55W10sIGVsbTogYW55KSA9PiB7XG4gICAgICBpZiAoQXJyYXkuaXNBcnJheShlbG0pKSB7XG4gICAgICAgIHJldHVybiBhcnIuY29uY2F0KHRoaXMuZmxhdHRlbihlbG0pKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGFyci5jb25jYXQoZWxtKTtcbiAgICB9LCBbXSk7XG4gIH1cbn1cbiJdfQ==