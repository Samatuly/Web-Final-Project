import { KeysPipe } from './keys';
import { ValuesPipe } from './values';
import { PairsPipe } from './pairs';
import { PickPipe } from './pick';
import { OmitPipe } from './omit';
import { InvertPipe } from './invert';
import { InvertByPipe } from './invert-by';
import { DiffObjPipe } from './diff-obj';
import { NgModule } from '@angular/core';
import * as i0 from "@angular/core";
const OBJECT_PIPES = [KeysPipe, ValuesPipe, PairsPipe, PickPipe, InvertPipe, InvertByPipe, OmitPipe, DiffObjPipe];
export class NgObjectPipesModule {
}
NgObjectPipesModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: NgObjectPipesModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgObjectPipesModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.2.12", ngImport: i0, type: NgObjectPipesModule, declarations: [KeysPipe, ValuesPipe, PairsPipe, PickPipe, InvertPipe, InvertByPipe, OmitPipe, DiffObjPipe], exports: [KeysPipe, ValuesPipe, PairsPipe, PickPipe, InvertPipe, InvertByPipe, OmitPipe, DiffObjPipe] });
NgObjectPipesModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: NgObjectPipesModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: NgObjectPipesModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: OBJECT_PIPES,
                    imports: [],
                    exports: OBJECT_PIPES,
                }]
        }] });
export { KeysPipe } from './keys';
export { ValuesPipe } from './values';
export { PairsPipe } from './pairs';
export { PickPipe } from './pick';
export { OmitPipe } from './omit';
export { InvertPipe } from './invert';
export { InvertByPipe } from './invert-by';
export { DiffObjPipe } from './diff-obj';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvbmctcGlwZXMvcGlwZXMvb2JqZWN0L2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFDbEMsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUN0QyxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sU0FBUyxDQUFDO0FBQ3BDLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFDbEMsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLFFBQVEsQ0FBQztBQUNsQyxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sVUFBVSxDQUFDO0FBQ3RDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDM0MsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUN6QyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDOztBQUV6QyxNQUFNLFlBQVksR0FBRyxDQUFDLFFBQVEsRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFFLFFBQVEsRUFBRSxXQUFXLENBQUMsQ0FBQztBQU9sSCxNQUFNLE9BQU8sbUJBQW1COztpSEFBbkIsbUJBQW1CO2tIQUFuQixtQkFBbUIsaUJBUFYsUUFBUSxFQUFFLFVBQVUsRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFFLFVBQVUsRUFBRSxZQUFZLEVBQUUsUUFBUSxFQUFFLFdBQVcsYUFBMUYsUUFBUSxFQUFFLFVBQVUsRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFFLFVBQVUsRUFBRSxZQUFZLEVBQUUsUUFBUSxFQUFFLFdBQVc7a0hBT25HLG1CQUFtQjs0RkFBbkIsbUJBQW1CO2tCQUwvQixRQUFRO21CQUFDO29CQUNSLFlBQVksRUFBRSxZQUFZO29CQUMxQixPQUFPLEVBQUUsRUFBRTtvQkFDWCxPQUFPLEVBQUUsWUFBWTtpQkFDdEI7O0FBR0QsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLFFBQVEsQ0FBQztBQUNsQyxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sVUFBVSxDQUFDO0FBQ3RDLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFDcEMsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLFFBQVEsQ0FBQztBQUNsQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBQ2xDLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFDdEMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUMzQyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sWUFBWSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgS2V5c1BpcGUgfSBmcm9tICcuL2tleXMnO1xuaW1wb3J0IHsgVmFsdWVzUGlwZSB9IGZyb20gJy4vdmFsdWVzJztcbmltcG9ydCB7IFBhaXJzUGlwZSB9IGZyb20gJy4vcGFpcnMnO1xuaW1wb3J0IHsgUGlja1BpcGUgfSBmcm9tICcuL3BpY2snO1xuaW1wb3J0IHsgT21pdFBpcGUgfSBmcm9tICcuL29taXQnO1xuaW1wb3J0IHsgSW52ZXJ0UGlwZSB9IGZyb20gJy4vaW52ZXJ0JztcbmltcG9ydCB7IEludmVydEJ5UGlwZSB9IGZyb20gJy4vaW52ZXJ0LWJ5JztcbmltcG9ydCB7IERpZmZPYmpQaXBlIH0gZnJvbSAnLi9kaWZmLW9iaic7XG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5jb25zdCBPQkpFQ1RfUElQRVMgPSBbS2V5c1BpcGUsIFZhbHVlc1BpcGUsIFBhaXJzUGlwZSwgUGlja1BpcGUsIEludmVydFBpcGUsIEludmVydEJ5UGlwZSwgT21pdFBpcGUsIERpZmZPYmpQaXBlXTtcblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBPQkpFQ1RfUElQRVMsXG4gIGltcG9ydHM6IFtdLFxuICBleHBvcnRzOiBPQkpFQ1RfUElQRVMsXG59KVxuZXhwb3J0IGNsYXNzIE5nT2JqZWN0UGlwZXNNb2R1bGUge31cblxuZXhwb3J0IHsgS2V5c1BpcGUgfSBmcm9tICcuL2tleXMnO1xuZXhwb3J0IHsgVmFsdWVzUGlwZSB9IGZyb20gJy4vdmFsdWVzJztcbmV4cG9ydCB7IFBhaXJzUGlwZSB9IGZyb20gJy4vcGFpcnMnO1xuZXhwb3J0IHsgUGlja1BpcGUgfSBmcm9tICcuL3BpY2snO1xuZXhwb3J0IHsgT21pdFBpcGUgfSBmcm9tICcuL29taXQnO1xuZXhwb3J0IHsgSW52ZXJ0UGlwZSB9IGZyb20gJy4vaW52ZXJ0JztcbmV4cG9ydCB7IEludmVydEJ5UGlwZSB9IGZyb20gJy4vaW52ZXJ0LWJ5JztcbmV4cG9ydCB7IERpZmZPYmpQaXBlIH0gZnJvbSAnLi9kaWZmLW9iaic7XG4iXX0=